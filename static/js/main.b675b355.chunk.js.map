{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/StatisticsEl/StatisticsEl.module.css","components/Statistics/Statistics.module.css","components/Profile/Profile.js","components/StatisticsEl/StatisticsEl.js","components/StatisticsEl/getRandomColor.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","followers","views","likes","className","s","profile","description","src","alt","stats","label","quantity","StatisticsEl","stat","color","i","Math","floor","random","getRandomColor","item","style","backgroundColor","percentage","id","Statistics","title","isTitle","statList","map","FriendList","friends","friendList","friend","isOnline","TransactionHistory","items","transactionHistory","tableHeader","tableBody","tableRow","type","amount","currency","App","statisticalData","friendListData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b675b355.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1Q4Qj\",\"description\":\"Profile_description__1r-6B\",\"tag\":\"Profile_tag__1-ymH\",\"name\":\"Profile_name__2iKlV\",\"location\":\"Profile_location__2gAj7\",\"stats\":\"Profile_stats__aqDRB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__J-lJ1\",\"avatar\":\"FriendList_avatar__daj5u\",\"item\":\"FriendList_item__3zi29\",\"isOnline\":\"FriendList_isOnline__21gH9\",\"name\":\"FriendList_name__2kQJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__gO7RH\",\"tableHeader\":\"TransactionHistory_tableHeader__13kQk\",\"tableRow\":\"TransactionHistory_tableRow__3J1RK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StatisticsEl_item__3k9dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__nbeLr\"};","import PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\n\r\nfunction Profile({ name, tag, location, avatar, followers, views, likes }) {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li>\r\n          <span className={s.label}>Followers </span>\r\n          <span className={s.quantity}>{followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Views </span>\r\n          <span className={s.quantity}>{views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Likes </span>\r\n          <span className={s.quantity}>{likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  followers: PropTypes.number.isRequired,\r\n  views: PropTypes.number.isRequired,\r\n  likes: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\r\nimport s from './StatisticsEl.module.css';\r\nimport getRandomColor from './getRandomColor';\r\n\r\nfunction StatisticsEl({ stat }) {\r\n  const color = getRandomColor();\r\n  return (\r\n    <li className={s.item} key={stat.id} style={{ backgroundColor: `${color}` }}>\r\n      <span className=\"label\">{stat.label}</span>\r\n      <span className=\"percentage\">{stat.percentage}</span>\r\n    </li>\r\n  );\r\n}\r\n\r\nStatisticsEl.propTypes = {\r\n  stat: PropTypes.object,\r\n};\r\n\r\nexport default StatisticsEl;\r\n","export default function getRandomColor() {\r\n  let letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport StatisticsEl from '../StatisticsEl';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction Statistics({ title = null, stats }) {\r\n  const isTitle = !(title === null);\r\n\r\n  return (\r\n    <section className=\"statistics\">\r\n      {isTitle && <h2 className=\"title\">{title}</h2>}\r\n\r\n      <ul className={s.statList}>\r\n        {stats.map(stat => {\r\n          return <StatisticsEl stat={stat} key={stat.id} />;\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(PropTypes.shape),\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport s from './FriendList.module.css';\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <ul className={s.friendList}>\r\n      {friends.map(friend => {\r\n        const isOnline = friend.isOnline;\r\n        return (\r\n          <li className={s.item} key={friend.name}>\r\n            <span\r\n              className={s.isOnline}\r\n              style={isOnline ? { backgroundColor: 'green' } : { backgroundColor: 'red' }}\r\n            ></span>\r\n            <img src={friend.avatar} className={s.avatar} alt={friend.name} />\r\n            <span className={s.name}>{friend.name}</span>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.shape),\r\n};\r\n\r\nexport default FriendList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css';\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead>\r\n        <tr className={s.tableHeader}>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className={s.tableBody}>\r\n        {items.map(item => {\r\n          return (\r\n            <tr key={item.id} className={s.tableRow}>\r\n              <td>{item.type}</td>\r\n              <td>{item.amount}</td>\r\n              <td>{item.currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import './App.css';\nimport Profile from './components/Profile';\nimport { name, tag, location, avatar, stats } from './components/Profile/user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport FriendList from './components/FriendList';\nimport friendListData from './components/FriendList/friend-list.json';\nimport TransactionHistory from './components/TransactionHistory';\nimport transactions from './components/TransactionHistory/transactions.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {\n        <Profile\n          name={name}\n          tag={tag}\n          location={location}\n          avatar={avatar}\n          followers={stats.followers}\n          views={stats.views}\n          likes={stats.likes}\n        />\n      }\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n\n      <FriendList friends={friendListData} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}